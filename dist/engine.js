(()=>{"use strict";class t{constructor(e){this.onDestroy=t=>{this._onDestroy=t},this.addTags=(...t)=>{t.forEach((t=>{this.compareTag(t)||this.Tags.push(t)}))},this.compareTag=t=>void 0!==this.Tags.find((e=>e===t)),this.destroy=()=>{t.destroy(this.Name),this._onDestroy&&this._onDestroy()},this.Name=e,this.Tags=[],t.add(this)}get Childs(){return Array.from(t.BaseObjects,(([t,e])=>e)).filter((t=>t.Parent===this))}set Name(e){if(t.find(e))throw new Error(`ОШИБКА: ${this.constructor.name} с именем '${e}' уже существует.`);this._Name=e}get Name(){return this._Name}static add(e){if(t.find(e.Name))throw new Error(`ОШИБКА: ${this.name} с именем '${e.Name}' уже существует.`);this.BaseObjects.set(e.Name,e)}static find(t){return this.BaseObjects.get(t)}static findByTag(t){return Array.from(this.BaseObjects,(([t,e])=>e)).filter((e=>this.name===e.constructor.name&&e.compareTag(t)))}static findAll(){return Array.from(this.BaseObjects,(([t,e])=>e)).filter((t=>this.name===t.constructor.name))}static destroy(t){this.BaseObjects.delete(t)}}t.BaseObjects=new Map;class e extends t{constructor(t,e){super(t),this.IsHidden=!1,this.addObject=t=>{t.setLayer(this)},this.update=()=>{this.Childs.forEach((t=>{t.broadcast&&!1===this.IsHidden&&t.broadcast("update")}))},this.Parent=e,this.Context=e.Context}get Childs(){return super.Childs}get Scene(){return this.Parent}get Order(){return this._Order}set Order(t){this._Order=t,this.Parent.sortLayers()}}class s extends t{constructor(s,i){super(s),this.addLayer=t=>{const s=new e(t,this);return s.Order=this.Childs.length,s},this.sortLayers=()=>{t.BaseObjects=new Map(Array.from(t.BaseObjects,(([t,e])=>e)).sort(((t,s)=>t instanceof e&&s instanceof e?t.Order>s.Order?1:t.Order<s.Order?-1:0:0)).map((t=>[t.Name,t])))},this.update=()=>{this.Childs.forEach((t=>{t.update()}))},this.Parent=i,this.Context=i.Context,this._IsActive=!0}get Childs(){return super.Childs}get Screen(){return this.Parent}get IsActive(){return this._IsActive}set IsActive(t){this._IsActive=t}get Order(){return this._Order}set Order(t){this._Order=t,this.Parent.sortScenes()}}class i{constructor(t){this.rotateByPoint=t=>(this.RadianAngle=-Math.atan2(t.Y-this.Center.Y,t.X-this.Center.X),this.RadianAngle),this.rotateByDegree=t=>(this.RadianAngle=t*Math.PI/180,this.RadianAngle),this.rotateByRadian=t=>(this.RadianAngle=t,this.RadianAngle),this.setCenter=t=>{this.Center=t},this.RadianAngle=0,this.Center=t}get DegreeAngle(){return 180*this.RadianAngle/Math.PI}}class o{constructor(){this.Position={X:0,Y:0},this.Rotation=new i(this.Position),this.Scale=1}get Position(){return this._Position}set Position(t){var e;this._Position=t,null===(e=this.Rotation)||void 0===e||e.setCenter(this._Position)}}class n extends t{constructor(t,...e){super(t),this.addComponent=t=>{const e=new t(this);return this.Components.set(t.name,e),e},this.getComponent=t=>{const e=this.Components.get(t.name);if(void 0===e)throw new Error(`ОШИБКА: Компонент '${t.name}' не найден.`);return e},this.tryGetComponent=t=>this.Components.get(t.name),this.detachComponent=t=>{this.Components.delete(t.name)},this.broadcast=(t,...e)=>{Array.from(this.Components,(([t,e])=>e)).filter((e=>e[t]&&"function"==typeof e[t])).forEach((s=>{if(s[t].length!==e.length)throw new Error(`ОШИБКА: Метод '${t}' в компоненте '${s.constructor.name}' количество переданных аргументов (${e.length}) не соответствует ожидаемому (${s[t].length})`);try{s[t].apply(this,...e)}catch(i){throw new Error(`ОШИБКА: Компонент '${s.constructor.name}' не смог запустить метод '${t}' со следующими аргументами: ${e.map((t=>"number"==typeof t?t:`'${t}'`)).join(", ")}.\n${i.message}`)}}))},this.setLayer=t=>{this.Layer=t,this.Parent=t},this.Components=new Map,this.Tags=[],this.IsHidden=!1,this.Transform=new o,e.forEach((t=>{this.addComponent(t)}))}static find(t){return super.find(t)}static findAll(){return super.findAll()}static findByTag(t){return super.findByTag(t)}static findByComponent(t){return Array.from(super.BaseObjects,(([t,e])=>e)).filter((e=>e instanceof n&&e.tryGetComponent(t)))}}class a{constructor(t){this.GameObject=t}}class r extends a{constructor(){super(...arguments),this._Dots=[],this.Opacity=1,this.drawByDots=(...t)=>{this._Radius=void 0,this._Dots=t,this._drawAction=()=>{if(this.GameObject.Layer&&!this.GameObject.IsHidden){this.GameObject.Layer.Context.beginPath(),this.GameObject.Layer.Context.globalAlpha=this.Opacity;const e=this.GameObject.Transform.Position.X,s=this.GameObject.Transform.Position.Y,i=this.GameObject.Transform.Rotation.RadianAngle;this._Dots.forEach(((o,n,a)=>{const r=o.X+e,h=o.Y+s,c=Math.cos(i),d=Math.sin(i);if(0===n?this.GameObject.Layer.Context.moveTo(c*(r-e)+d*(h-s)+e,c*(h-s)-d*(r-e)+s):this.GameObject.Layer.Context.lineTo(c*(r-e)+d*(h-s)+e,c*(h-s)-d*(r-e)+s),n===t.length-1){const t=a[0].X+e,i=a[0].Y+s;this.GameObject.Layer.Context.lineTo(c*(t-e)+d*(i-s)+e,c*(i-s)-d*(t-e)+s)}})),this.StrokeColor&&(this.GameObject.Layer.Context.setLineDash(this.StrokeDashTemplate||[]),this.GameObject.Layer.Context.strokeStyle=this.StrokeColor,this.GameObject.Layer.Context.lineWidth=this.StrokeWidth,this.GameObject.Layer.Context.stroke()),this.BackgroundColor&&(this.GameObject.Layer.Context.fillStyle=this.BackgroundColor,this.GameObject.Layer.Context.fill()),this.GameObject.Layer.Context.closePath()}}},this.drawByDotsCount=(t,e)=>{const s=[];for(let i=0;i<t;i++){const o=360/t*(Math.PI/180)*i,n=this.GameObject.Transform.Position.X,a=this.GameObject.Transform.Position.Y,r=n+e,h=a,c=Math.cos(o),d=Math.sin(o);s.push({X:c*(r-n)+d*(h-a),Y:c*(h-a)-d*(r-n)})}this.drawByDots(...s)},this.setStroke=(t,e="black")=>{this.StrokeWidth=t,this.StrokeColor=e},this.setStrokeDash=t=>{this.StrokeDashTemplate=t},this.getStrokeWidth=()=>this.StrokeWidth,this.getStrokeColor=()=>this.StrokeColor,this.drawCircle=t=>{this._Radius=t,this._drawAction=()=>{if(this.GameObject.Layer&&!this.GameObject.IsHidden){this.GameObject.Layer.Context.beginPath(),this.GameObject.Layer.Context.globalAlpha=this.Opacity;const e=this.GameObject.Transform.Position.X,s=this.GameObject.Transform.Position.Y;this.GameObject.Layer.Context.arc(e,s,t,this.GameObject.Transform.Rotation.RadianAngle,2*Math.PI+this.GameObject.Transform.Rotation.RadianAngle),this.StrokeColor&&(this.GameObject.Layer.Context.setLineDash(this.StrokeDashTemplate||[]),this.GameObject.Layer.Context.strokeStyle=this.StrokeColor,this.GameObject.Layer.Context.lineWidth=this.StrokeWidth,this.GameObject.Layer.Context.stroke()),this.BackgroundColor&&(this.GameObject.Layer.Context.fillStyle=this.BackgroundColor,this.GameObject.Layer.Context.fill()),this.GameObject.Layer.Context.closePath()}}},this.drawLineTo=t=>{this._Radius=void 0,this._Dots=[this.GameObject.Transform.Position,t],this._drawAction=()=>{this.GameObject.Layer&&!this.GameObject.IsHidden&&(this.GameObject.Layer.Context.beginPath(),this.GameObject.Layer.Context.globalAlpha=this.Opacity,this.GameObject.Layer.Context.moveTo(this.GameObject.Transform.Position.X,this.GameObject.Transform.Position.Y),this.GameObject.Layer.Context.lineTo(t.X,t.Y),this.StrokeColor&&(this.GameObject.Layer.Context.setLineDash(this.StrokeDashTemplate||[]),this.GameObject.Layer.Context.strokeStyle=this.StrokeColor,this.GameObject.Layer.Context.lineWidth=this.StrokeWidth,this.GameObject.Layer.Context.stroke()))}},this.setBackground=t=>{this.BackgroundColor=t},this.getBackground=()=>this.BackgroundColor,this.setOpacity=(t=1)=>{this.Opacity=t},this.getOpacity=()=>this.Opacity,this.getDots=()=>this._Dots.map((t=>({X:t.X+this.GameObject.Transform.Position.X,Y:t.Y+this.GameObject.Transform.Position.Y}))),this.getRadius=()=>this._Radius,this.update=()=>{void 0!==this._drawAction&&this._drawAction()}}}class h extends a{constructor(){super(...arguments),this._IsMoving=!1,this.Speed=1,this.Angle=0,this._move=()=>{if(void 0!==this.Target&&this.Target.X!==this.GameObject.Transform.Position.X&&this.Target.Y!==this.GameObject.Transform.Position.Y){this.Angle=Math.atan2(this.Target.Y-this.GameObject.Transform.Position.Y,this.Target.X-this.GameObject.Transform.Position.X),this._onStart&&!1===this._IsMoving&&this._onStart(this,this.GameObject,this.Target),this._IsMoving=!0;const t=Math.cos(this.Angle)*this.Speed,e=Math.sin(this.Angle)*this.Speed;this.GameObject.Transform.Position.X+=t,this.GameObject.Transform.Position.Y+=e,Math.abs(this.GameObject.Transform.Position.X-this.Target.X)<t&&(this.GameObject.Transform.Position.X=this.Target.X),Math.abs(this.GameObject.Transform.Position.Y-this.Target.Y)<e&&(this.GameObject.Transform.Position.Y=this.Target.Y),this._onMove&&this._onMove(this,this.GameObject,this.Target)}else void 0!==this.Target&&this._onFinish&&(this.Target=void 0,this._IsMoving=!1,this._onFinish(this,this.GameObject))},this.moveTo=t=>{this.Target=t},this.onMove=t=>{this._onMove=t},this.onFinish=t=>{this._onFinish=t},this.onStart=t=>{this._onStart=t},this.stop=(t=!0)=>{this.Target=void 0,this._IsMoving=!1,this._onFinish&&t&&this._onFinish(this,this.GameObject)},this.update=()=>{this._move()}}}var c;!function(t){t.White="#fff",t.Black="#000",t.Red="#f00",t.Green="#0f0",t.Blue="#00f"}(c||(c={}));class d{}d.Integer=(t=0,e=1)=>Math.floor(d.Float(t,e)),d.Float=(t=0,e=1)=>Math.random()*(e-t+1)+t,d.Color=()=>`rgb(${d.Integer(0,255)}, ${d.Integer(0,255)}, ${d.Integer(0,255)})`,d.Boolean=()=>1===d.Integer(0,1);class m{}m.solve=(t,e={X:0,Y:0})=>Math.sqrt(Math.pow(e.X-t.X,2)+Math.pow(e.Y-t.Y,2));class l{constructor(t,e){this.add=t=>new l(this.Value.X+t.Value.X,this.Value.Y+t.Value.Y),this.sub=t=>new l(this.Value.X-t.Value.X,this.Value.Y-t.Value.Y),this.dot=t=>new l(this.Value.X*t,this.Value.Y*t),this.invert=()=>this.dot(-1),this.multiply=t=>[this.Value.X*t.Value.X,this.Value.Y*t.Value.Y].reduce(((t,e)=>t+e),0),this.length=()=>Math.sqrt(Math.pow(this.Value.X,2)+Math.pow(this.Value.Y||0,2)),this.perpendicular=()=>new l(this.Value.Y,-this.Value.X),this.Value="number"==typeof t&&"number"==typeof e?{X:t,Y:e}:{X:e?e.X-t.X:t.X,Y:e?e.Y-t.Y:t.Y}}}class u{constructor(){this.add=t=>{this.Points.push(t)},this.calculateDirection=()=>{const t=this.Points[this.Points.length-1],e=t.invert();if(3===this.Points.length){const s=this.Points[1],i=this.Points[0],o=s.sub(t),n=i.sub(t);let a=o.perpendicular();if(a.multiply(i)>=0&&(a=a.invert()),a.multiply(e)>0)return this.Points.splice(0,1),a;let r=n.perpendicular();return r.multiply(s)>=0&&(r=r.invert()),r.multiply(e)>0?(this.Points.splice(1,1),r):void 0}let s=this.Points[0].sub(t).perpendicular();return s.multiply(e)<=0&&(s=s.invert()),s},this.Points=[]}}class g extends a{constructor(){super(...arguments),this.update=()=>{n.findByComponent(g).filter((t=>t.Name!==this.GameObject.Name)).forEach((t=>{g.check(this.GameObject,t)&&this._onCollision&&this._onCollision(this.GameObject,t)}))},this.onCollision=t=>{this._onCollision=t}}static _farthestPoint(t,e){let s,i={X:0,Y:0},o=t.getComponent(r);for(const t of o.getDots()){const o=e.multiply(new l(t));(!s||s<o)&&(i=t,s=o)}return new l(i)}static _support(t,e,s){const i=this._farthestPoint(t,s),o=this._farthestPoint(e,s.invert());return i.sub(o)}static check(t,e){const s=new u;let i=new l(0,1);const o=g._support(t,e,i);for(s.add(o),i=i.invert();i;){const o=g._support(t,e,i);if(o.multiply(i)<=0)return!1;s.add(o),i=s.calculateDirection()}return!0}}const p=new class extends t{constructor(e,i,o){super("GameScreen"),this._resizeCanvas=()=>{this.Canvas.width=innerWidth,this.Canvas.height=innerHeight,this.Canvas.style.cssText="position: absolute; top: 0; left: 0;"},this.addScene=t=>{const e=new s(t,this);return e.Order=this.Childs.length,e},this.removeScene=t=>{var e;null===(e=s.find(t))||void 0===e||e.destroy()},this.update=()=>{this.Context.clearRect(0,0,this.Canvas.width,this.Canvas.height),this.Childs.filter((t=>t.IsActive)).forEach((t=>{t.update()}))},this.sortScenes=()=>{t.BaseObjects=new Map(Array.from(t.BaseObjects,(([t,e])=>e)).sort(((t,e)=>t instanceof s&&e instanceof s?t.Order>e.Order?1:t.Order<e.Order?-1:0:0)).map((t=>[t.Name,t])))},this.play=()=>{this.update(),this.Loop=requestAnimationFrame(this.play)},this.pause=()=>{cancelAnimationFrame(this.Loop)},this.Canvas=document.createElement("canvas"),this.Context=this.Canvas.getContext("2d"),void 0===i||void 0===o||null===i||null===o?(this._resizeCanvas(),window.addEventListener("resize",(t=>{this._resizeCanvas()}))):(this.Canvas.width=i,this.Canvas.height=o),e.appendChild(this.Canvas)}get Childs(){return super.Childs}}(document.body),f=p.addScene("game"),C=f.addLayer("interface"),b=f.addLayer("world");for(let t=0;t<20;t++){const e={X:d.Integer(innerWidth),Y:d.Integer(innerHeight)},s=new n(`obj_${t}`,r,h,g);s.Transform.Position={X:d.Integer(innerWidth),Y:d.Integer(innerHeight)};const i=new n(`dot_${s.Name}`,r),o=new n(`line_${s.Name}`,r);o.getComponent(r).drawLineTo(e),o.getComponent(r).setStroke(1),o.getComponent(r).setStrokeDash([5,3]),o.getComponent(r).setOpacity(.35),C.addObject(i),C.addObject(o);const a=s.getComponent(r);a.drawByDotsCount(d.Integer(3,10),d.Integer(10,25)),a.setBackground(d.Color());const c=s.getComponent(h);c.Speed=1,c.moveTo(e),c.onStart(((t,e,s)=>{e.Transform.Rotation.rotateByPoint(s);const i=n.find(`dot_${e.Name}`);i&&(i.getComponent(r).drawCircle(5),i.getComponent(r).setBackground("red"),i.Transform.Position=s);const o=n.find(`line_${e.Name}`);o&&o.getComponent(r).drawLineTo(s)})),c.onMove(((t,e,s)=>{const i=n.find(`line_${e.Name}`);i&&(i.Transform.Position=e.Transform.Position)})),c.onFinish(((t,e)=>{const s={X:d.Integer(innerWidth),Y:d.Integer(innerHeight)};t.moveTo(s),n.find(`dot_${e.Name}`).Transform.Position=s})),s.getComponent(g).onCollision(((t,e)=>{t.getComponent(h).stop(!1),e.getComponent(h).stop(!1);const s=-Math.atan2(e.Transform.Position.Y-t.Transform.Position.Y,e.Transform.Position.X-t.Transform.Position.X),i=-Math.atan2(t.Transform.Position.Y-e.Transform.Position.Y,t.Transform.Position.X-e.Transform.Position.X),o=m.solve(t.Transform.Position,e.Transform.Position),n={X:Math.cos(s)*o+t.Transform.Position.X,Y:Math.sin(s)*o+t.Transform.Position.Y},a={X:Math.cos(i)*o+e.Transform.Position.X,Y:Math.sin(i)*o+e.Transform.Position.Y};t.getComponent(h).moveTo(n),e.getComponent(h).moveTo(a)})),b.addObject(s)}p.play(),document.body.addEventListener("keypress",(t=>{"Spacebar"!==t.key&&" "!==t.key||!C.IsHidden?"Spacebar"!==t.key&&" "!==t.key||C.IsHidden||(C.IsHidden=!0):C.IsHidden=!1}))})();