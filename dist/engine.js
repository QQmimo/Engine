(()=>{"use strict";var t;!function(t){t.White="#fff",t.Black="#000",t.Red="#f00",t.Green="#0f0",t.Blue="#00f"}(t||(t={}));class e{}e.Integer=(t=0,s=1)=>Math.floor(e.Float(t,s)),e.Float=(t=0,e=1)=>Math.random()*(e-t)+t;class s{}s.destroy=t=>{Object.keys(t).forEach((e=>{delete t[e]}))};class i{constructor(t){this.getAsRadian=()=>i.degreeToRadian(this._Degree),this.getAsDegree=()=>this._Degree,this._Degree=t}}i.radianToDegree=t=>180*t/Math.PI,i.degreeToRadian=t=>t*Math.PI/180;class n{constructor(t){this.addTags=(...t)=>{t.forEach((t=>{this.compareTag(t)||this.Tags.push(t)}))},this.compareTag=t=>void 0!==this.Tags.find((e=>e===t)),this.destroy=()=>{n.destroy(this.Name),s.destroy(this)},this.Name=t,this.Tags=[],n.add(this)}set Name(t){if(n.find(t))throw new Error(`ОШИБКА: ${this.constructor.name} с именем '${t}' уже существует.`);this._Name=t}get Name(){return this._Name}static add(t){if(n.find(t.Name))throw new Error(`ОШИБКА: ${this.name} с именем '${t.Name}' уже существует.`);this.BaseObjects.push(t)}static find(t){return this.BaseObjects.find((e=>e.Name===t))}static findByTag(t){return this.BaseObjects.filter((e=>this.name===e.constructor.name&&e.compareTag(t)))}static destroy(t){const e=this.BaseObjects.filter((t=>this.name===t.constructor.name)).map((t=>t.Name)).indexOf(t);-1!==e&&(s.destroy(this.BaseObjects[e]),delete this.BaseObjects[e],this.BaseObjects=this.BaseObjects.filter((t=>void 0!==t)))}}n.BaseObjects=[];class a extends n{constructor(t,e){super(t),this.addObject=t=>{t.setLayer(this),this.GameObjects.push(t)},this.update=()=>{this.GameObjects.forEach((t=>{t.broadcastRun("update")}))},this.Screen=e,this.Context=this.Screen.Canvas.getContext("2d"),this.GameObjects=[]}set Order(t){this._Order=t,this.Screen.sortLayers()}get Order(){return this._Order}}class o{constructor(t){this.update=()=>{},this.GameObject=t}}class r{constructor(t){this.setAsDegree=t=>{this._Angle=new i(t)},this.setAsRadian=t=>{this._Angle=new i(i.radianToDegree(t))},this.getAsRadian=()=>this._Angle.getAsRadian(),this.getAsDegree=()=>this._Angle.getAsDegree(),this._Angle=new i(0),this.GameObject=t}}class h{constructor(t){this.GameObject=t,this.Rotation=new r(t),this.Position={X:0,Y:0},this.Scale=1}}class c extends n{constructor(t,...e){super(t),this.addComponent=t=>{const e=new t(this);return this.Components.push(e),e},this.getComponent=t=>{const e=new t(void 0);return this.Components.find((t=>t.constructor.name===e.constructor.name))},this.detachComponent=t=>{const e=new t(void 0);this.Components=this.Components.filter((t=>t.constructor.name!==e.constructor.name))},this.broadcastRun=(t,...e)=>{this.Components.filter((e=>e[t]&&"function"==typeof e[t])).forEach((s=>{if(s[t].length!==e.length)throw new Error(`ОШИБКА: Метод '${t}' в компоненте '${s.constructor.name}' количество переданных аргументов (${e.length}) не соответствует ожидаемому (${s[t].length})`);try{s[t].apply(this,...e)}catch(i){throw new Error(`ОШИБКА: Компонент '${s.constructor.name}' не смог запустить метод '${t}' со следующими аргументами: ${e.map((t=>"number"==typeof t?t:`'${t}'`)).join(", ")}.\n${i.message}`)}}))},this.setLayer=t=>{this.Layer=t},this.Components=[],this.Tags=[],this.IsHidden=!1,this.Transform=new h(this),e.forEach((t=>{this.addComponent(t)}))}static findAllWith(t){return this.BaseObjects.filter((e=>e instanceof c&&void 0!==e.getComponent(t)))}}class d extends o{constructor(){super(...arguments),this._Opacity=1,this._Dots=[],this._Angle=new i(0),this.drawByDots=(...t)=>{this._Dots=t,this._drawAction=()=>{this.GameObject.Layer&&!this.GameObject.IsHidden&&(this.GameObject.Layer.Context.beginPath(),this.GameObject.Layer.Context.globalAlpha=this._Opacity,this._Dots.forEach(((e,s,i)=>{0===s?this.GameObject.Layer.Context.moveTo(e.X+this.GameObject.Transform.Position.X,e.Y+this.GameObject.Transform.Position.Y):this.GameObject.Layer.Context.lineTo(e.X+this.GameObject.Transform.Position.X,e.Y+this.GameObject.Transform.Position.Y),s===t.length-1&&this.GameObject.Layer.Context.lineTo(i[0].X+this.GameObject.Transform.Position.X,i[0].Y+this.GameObject.Transform.Position.Y)})),this._StrokeColor&&(this.GameObject.Layer.Context.strokeStyle=this._StrokeColor,this.GameObject.Layer.Context.lineWidth=this._StrokeWidth,this.GameObject.Layer.Context.stroke()),this._BackgroundColor&&(this.GameObject.Layer.Context.fillStyle=this._BackgroundColor,this.GameObject.Layer.Context.fill()),this.GameObject.Layer.Context.closePath())},this.update()},this.drawByDotsCount=(t,e)=>{const s=[];for(let n=0;n<t;n++){const a=new i(360/t).getAsRadian()*n,o=this.GameObject.Transform.Position.X,r=this.GameObject.Transform.Position.Y,h=o+e,c=r,d=Math.cos(a),m=Math.sin(a);s.push({X:d*(h-o)+m*(c-r),Y:d*(c-r)-m*(h-o)})}this.drawByDots(...s)},this.setStroke=(t,e="black")=>{this._StrokeWidth=t,this._StrokeColor=e,this.update()},this.setBackground=t=>{this._BackgroundColor=t,this.update()},this.setOpacity=(t=1)=>{this._Opacity=t,this.update()},this.update=()=>{this._drawAction&&(this._drawAction(),this._rotate())},this._rotate=()=>{this.GameObject.Layer&&Math.round(this._Angle.getAsDegree())!==Math.round(this.GameObject.Transform.Rotation.getAsDegree())&&(this._Angle=new i(this.GameObject.Transform.Rotation.getAsDegree()),this._Dots.forEach((t=>{const e=this.GameObject.Transform.Position.X,s=this.GameObject.Transform.Position.Y,i=t.X+e,n=t.Y+s,a=Math.cos(this._Angle.getAsRadian()),o=Math.sin(this._Angle.getAsRadian());t.X=a*(i-e)+o*(n-s),t.Y=a*(n-s)-o*(i-e)})))}}}class m extends o{constructor(){super(...arguments),this._IsMoving=!1,this.Speed=1,this.Angle=0,this.moveTo=t=>{this.Target=t},this.onMove=t=>{this._onMove=t},this.onFinish=t=>{this._onFinish=t},this.onStart=t=>{this._onStart=t},this.update=()=>{if(this.GameObject.compareTag("Player")&&console.log(this.GameObject.Transform.Position,this.Target),void 0!==this.Target&&this.Target.X!==this.GameObject.Transform.Position.X&&this.Target.Y!==this.GameObject.Transform.Position.Y){this._onStart&&!1===this._IsMoving&&this._onStart(this.GameObject,this.Target,this.Angle),this._IsMoving=!0,this.Angle=Math.atan2(this.Target.Y-this.GameObject.Transform.Position.Y,this.Target.X-this.GameObject.Transform.Position.X);const t=Math.cos(this.Angle)*this.Speed,e=Math.sin(this.Angle)*this.Speed;this.GameObject.Transform.Position.X+=Math.floor(t),this.GameObject.Transform.Position.Y+=Math.floor(e),Math.abs(this.GameObject.Transform.Position.X-this.Target.X)<t&&(this.GameObject.Transform.Position.X=this.Target.X),Math.abs(this.GameObject.Transform.Position.Y-this.Target.Y)<e&&(this.GameObject.Transform.Position.Y=this.Target.Y),this._onMove&&this._onMove(this.GameObject,this.Target,this.Angle)}else void 0!==this.Target&&this._onFinish&&(this.Target=void 0,this._IsMoving=!1,this._onFinish(this.GameObject,this.Target,this.Angle))}}}const g=new class extends n{constructor(t,e,s){super("GameScreen"),this._resizeCanvas=()=>{this.Canvas.width=innerWidth,this.Canvas.height=innerHeight,this.Canvas.style.cssText="position: absolute; top: 0; left: 0;"},this.addLayer=t=>{const e=new a(t,this);return e.Order=this.Layers.length,this.Layers.push(e),e},this.sortLayers=()=>{this.Layers=this.Layers.sort(((t,e)=>t.Order>e.Order?-1:t.Order<e.Order?1:0)),this.update()},this.removeLayer=t=>{var e;null===(e=this.Layers.find((e=>e.Name===t)))||void 0===e||e.destroy()},this.update=()=>{this.Layers.forEach((t=>{t.Context.setTransform(1,0,0,1,0,0),t.Context.clearRect(0,0,this.Canvas.width,this.Canvas.height),t.update(),t.Context.restore()}))},this.runLoop=()=>{this.update(),requestAnimationFrame(this.runLoop)},this.Layers=[],this.Canvas=document.createElement("canvas"),void 0===e||void 0===s||null===e||null===s?(this._resizeCanvas(),window.addEventListener("resize",(t=>{this._resizeCanvas()}))):(this.Canvas.width=e,this.Canvas.height=s),t.appendChild(this.Canvas)}}(document.body),l=g.addLayer("world");for(let t=0;t<1e4;t++){const s=new c(`cube_${t}`,d,m);s.Transform.Position={X:e.Integer(innerWidth),Y:e.Integer(innerHeight)};const i=s.getComponent(d);null==i||i.setBackground(`rgb(${e.Integer(0,255)}, ${e.Integer(0,255)}, ${e.Integer(0,255)})`);const n=e.Integer(10,25);null==i||i.drawByDots({X:-n,Y:-n},{X:n,Y:-n},{X:n,Y:n},{X:-n,Y:n});const a=s.getComponent(m);a.Speed=e.Integer(2,10),a.moveTo({X:e.Integer(innerWidth),Y:e.Integer(innerHeight)}),a.onFinish((t=>{t.getComponent(m).Speed=e.Integer(2,10),t.getComponent(m).moveTo({X:e.Integer(innerWidth),Y:e.Integer(innerHeight)})})),l.addObject(s)}g.runLoop()})();